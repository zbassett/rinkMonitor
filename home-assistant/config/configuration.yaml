homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 44.7983
  longitude: -93.1529
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 246
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago
  # Customization file
  customize: !include customize.yaml

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Show the introduction message on startup.
introduction:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

switch:
  - platform: rest
    name: switch_garage_door_1
    resource: http://10.0.1.3:5555/doors/garage_door_1
    method: put
    body_on: '{"target": "open"}'
    body_off: '{"target": "closed"}'
    is_on_template: >
        {% if is_state('sensor.garage_door_1', 'open') %}
          true
        {% else %}
          false
        {% endif %}
    headers:
      Content-Type: application/json
    verify_ssl: true

# Sensors
sensor:
  - platform: rest
    name: garage_door_sensors
    resource: http://10.0.1.3:5555/doors
    json_attributes:
      - garage_door_1
      - garage_door_2
      - garage_door_3
    value_template: 'OK'
    
  - platform: template
    sensors:
      garage_door_1:
        value_template: '{{ states.sensor.garage_door_sensors.attributes["garage_door_1"]["state"] }}'
      garage_door_2:
        value_template: '{{ states.sensor.garage_door_sensors.attributes["garage_door_2"]["state"] }}'
      garage_door_3:
        value_template: '{{ states.sensor.garage_door_sensors.attributes["garage_door_3"]["state"] }}'
        
        
  - platform: rest
    name: remote_sensors
    resource: http://flask_app:5555/sensors
    json_attributes:
      - probe_1_temp
      - dht_1_temp
      - dht_1_hum
      - dht_2_temp
      - dht_2_hum
      - dht_3_temp
      - dht_3_hum
      - dht_4_temp
      - dht_4_hum
    value_template: 'OK'
    
  - platform: template
    sensors:
      probe_1_temp:
        value_template: '{{ states.sensor.remote_sensors.attributes["probe_1_temp"]["reading"] }}'
        device_class: temperature
        unit_of_measurement: '°C'
      dht_1_temp:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_1_temp"]["reading"] }}'
        device_class: temperature
        unit_of_measurement: '°C'
      dht_1_hum:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_1_hum"]["reading"] }}'
        device_class: humidity
        unit_of_measurement: '%'
      dht_2_temp:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_2_temp"]["reading"] }}'
        device_class: temperature
        unit_of_measurement: '°C'
      dht_2_hum:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_2_hum"]["reading"] }}'
        device_class: humidity
        unit_of_measurement: '%'
      dht_3_temp:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_3_temp"]["reading"] }}'
        device_class: temperature
        unit_of_measurement: '°C'
      dht_3_hum:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_3_hum"]["reading"] }}'
        device_class: humidity
        unit_of_measurement: '%'
      dht_4_temp:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_4_temp"]["reading"] }}'
        device_class: temperature
        unit_of_measurement: '°C'
      dht_4_hum:
        value_template: '{{ states.sensor.remote_sensors.attributes["dht_4_hum"]["reading"] }}'
        device_class: humidity
        unit_of_measurement: '%'


# Text to speech
tts:
  - platform: google

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

nest:
  client_id: !secret client_id
  client_secret: !secret client_secret
